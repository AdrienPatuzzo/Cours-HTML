<!------------------- Exo 1 Algo a la maison du 01 Aout --------------------->

algorithme: assurance Auto
<!-- Une compagnie d'assurance automobile propose à ses clients quatre familles de tarifs identifiables par une couleur, du moins au plus onéreux : tarifs bleu, vert, orange et rouge. Le tarif dépend de la situation du conducteur : Ecrire l'algorithme permettant de saisir les données nécessaires pour une auto-assurance. un conducteur de moins de 25 ans et titulaire du permis depuis moins de deux ans, se voit attribuer le tarif rouge, si toutefois il n'a jamais été responsable d'accident. Sinon, la compagnie refuse de l'assurer. un conducteur de moins de 25 ans et titulaire du permis depuis plus de deux ans, ou de plus de 25 ans mais titulaire du permis depuis moins de deux ans a le droit au tarif orange s'il n'a jamais provoqué d'accident, au tarif rouge pour un accident, sinon il est refusé. un conducteur de plus de 25 ans titulaire du permis depuis plus de deux ans bénéficie du tarif vert s'il n'est à l'origine d'aucun accident et du tarif orange pour un accident, du tarif rouge pour deux accidents, et refusé au-delà De plus, pour encourager la fidélité des clients acceptés, la compagnie propose un contrat de la couleur immédiatement la plus avantageuse s'il est entré dans la maison depuis plus de cinq ans. Ainsi, s'il satisfait à cette exigence, un client normalement "vert" devient "bleu", un client normalement "orange" devient "vert", et le "rouge" devient orange. -->
variables: age, permis, accident, ancienneté:entiers; pastille: car;    
début:
age <- saisi ();
permis <- saisi ();
accident <- saisi ();
ancienneté <- saisi ();
pastille <- saisi ();

Si (age < 25 et permis < 2) et accident = 0 alors
    ecrire ("rouge");
    Sinon  accident > 0 alors
        ecrire ("refus");
    Fin si;
    Sinon si ((age > 25 et permis > 2) ou (age < 25 et permis < 2)) et accident = 0 alors
        ecrire ("orange");
    Sinon si accident > 0 alors
        ecrire ("rouge");
    Sinon si accident > 1 alors
        ecrire ("refus");
    fin si;
    Sinon si (age < 25 et permis < 2) et accident = 0 alors
        ecrire ("vert");
    Sinon si accident > 0 alors
        ecrire ("orange");
    Sinon si accident > 1 alors
        ecrire ("rouge");
    Sinon ecrire ("refus"); 
Fin si; 

Si ancienneté > 5 alors
rouge <- orange
orange <- vert
vert <- bleu
Fin si;
fin;

<!------------------- Exo 2 Algo a la maison du 01 Aout --------------------->
Algorithme:
<!-- Lire la suite des prix (en euros entiers et terminée par zéro) des achats d’un client. Calculer la somme qu’il doit, lire la somme qu’il paye, et simuler la remise de la monnaie en affichant les textes "10 Euros", "5 Euros" et "1 Euro" autant de fois qu’il y a de coupures de chaque sorte à rendre.-->

variables: prix, somme: entiers;
début:
prix <- saisie ();
somme <- prix;
fin:
Si (prix = 0) alors
Ecrire ("10 Euros");
Sinon si (prix = 5) alors
Ecrire ("5 Euros");
Sinon si (prix = 1) alors
Ecrire ("1 Euro");
Sinon
Ecrire ("10 Euros");
finSi;
fin;

<!------------------- Exo 3 Algo a la maison du 01 Aout --------------------->
Algorithme: 
<!-- Ecrire un algorithme qui demande un nombre compris entre 10 et 20, jusqu’à ce que la réponse convienne. En cas de réponse supérieure à 20, on fera apparaître un message : « Plus petit ! », et inversement, « Plus grand ! » si le nombre est inférieur à 10. -->

variables: nombre: entiers;
début:
nombre <- saisie ();
Si (nombre > 20) alors
Ecrire ("Plus petit !");
Sinon si (nombre < 10) alors
Ecrire ("Plus grand !");
Sinon
Ecrire ("Bonjour");
finSi;
fin;

<!------------------- Exo 4 Algo a la maison du 01 Aout --------------------->
Algorithme: Trie de tableau
<!-- Ecrire un algorithme permettant de trier par ordre croissant les éléments d’un tableau. -->
Variables: 
tab []: entiers;
i, j: entiers;

début:
Pour i <- 0 à taille tab faire
    Pour j <- i + 1 à taille tab faire
        Si (tab [i] > tab [j]) alors
            tab [i] <- tab [j];
            tab [j] <- tab [i];
            tab [i] <- tab [j];
        FinSi
    FinPour
FinPour
Fin

<!------------------- Exo 5 Algo a la maison du 01 Aout --------------------->
Algorithme: fusionner deux tableaux
<!--  Ecrire un algorithme permettant de fusionner les éléments de deux tableaux T1 et T2 dans un autre tableau T. -->
Variables: 
T1, T2, T: entiers;
i: entiers;

début:
Pour i <- 0 à taille T1 faire
    T [i] <- T1 [i];
FinPour
Pour i <- 0 à taille T2 faire
    T [i + taille T1] <- T2 [i];
FinPour
Fin

<!------------------- Exo 6 Algo a la maison du 01 Aout --------------------->
Algorithme: 
<!-- Ecrire un algorithme permettant de saisir les données d’un tableau à deux dimensions (10,4), puis de faire leur somme, produit et moyenne et de les afficher avec les résultats de calcul à l’écran. -->
variables: 
tab1, tab2, tab3: entiers;
i, j: entiers;

début:
Pour i <- 0 à 9 faire
    Pour j <- 0 à 3 faire
        tab1 [i] <- saisie ();
    FinPour
FinPour
Pour i <- 0 à 9 faire
    Pour j <- 0 à 3 faire
        tab2 [i] <- saisie ();
    FinPour
FinPour
Pour i <- 0 à 9 faire
    Pour j <- 0 à 3 faire
        tab3 [i] <- saisie ();
    FinPour
FinPour
Ecrire ("tab1"); 
Ecrire (tab1); 
Ecrire ("tab2"); 
Ecrire (tab2); 
Ecrire ("tab3"); 
Ecrire (tab3); 
fin 

<!------------------- Exo 7 Algo a la maison du 01 Aout --------------------->
algorithme:
<!-- Soit un tableau T à deux dimensions [12, 8] préalablement rempli de valeurs numériques. Écrire un algorithme qui recherche la plus grande valeur au sein de ce tableau. -->
variables: 
T: entiers;
i, j: entiers;

début:
Pour i <- 0 à 11 faire
    Pour j <- 0 à 7 faire
        Si (T [i] > T [i + 1]) alors
            T [i] <- T [i + 1];
            T [i + 1] <- T [i];
            T [i] <- T [i + 1];
        FinSi
    FinPour
FinPour
Fin

<!------------------- Exo 8 Algo a la maison du 01 Aout --------------------->
Algorithme: 
<!--  Ecrire un algorithme qui demande un nombre de départ, et qui ensuite écrit la table de multiplication de ce nombre, présentée comme suit (cas où l'utilisateur entre le nombre 7) : « Table de 7 : 7 x 1 = 7, 7 x 2 = 14, 7 x 3 = 21, …, 7 x 10 = 70 » -->
variables: 
nombre: entiers;
i, j: entiers;

début:
nombre <- saisie ();
Pour i <- 0 à nombre faire
    Pour j <- 0 à nombre faire
        Ecrire (nombre & " x " & j & " = " & nombre x j); 
    FinPour
FinPour
Fin

<!------------------- Exo 9 Algo a la maison du 01 Aout --------------------->
Algorithme: 
<!-- Ecrire un algorithme qui demande successivement 20 nombres à l’utilisateur, et qui lui dise ensuite quel était le plus grand parmi ces 20 nombres : « Entrez le nombre numéro 1 : 12 Entrez le nombre numéro 2 : 14 etc. Entrez le nombre numéro 20 : 6 Le plus grand de ces nombres est : 14 » -->
variables: 
nombre: entiers;
i: entiers;

début:
Pour i <- 1 à 20 faire
    nombre <- saisie ("Entrez le nombre numéro " & i & " : ");
    Si (nombre > i) alors
        Ecrire ("Le plus grand de ces nombres est : " & nombre); 
    FinSi
FinPour
Fin

<!------------------- Exo 10 Algo a la maison du 01 Aout --------------------->
Algorithme: 
<!--  Modifiez l’algorithme précédent pour que le programme affiche de surcroît en quelle position avait été saisie ce nombre : « C’était le nombre numéro 2 » -->
variables: 
nombre: entiers;
i: entiers;

début:
Pour i <- 1 à 20 faire
    nombre <- saisie ("Entrez le nombre numéro " & i & " : ");
    Si (nombre > i) alors
        Ecrire ("C’était le nombre numéro " & i); 
    FinSi
FinPour
Fin